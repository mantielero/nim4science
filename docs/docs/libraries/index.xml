<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>nim4science â€“ Libraries</title>
    <link>https://mantielero.github.io/nim4science/docs/libraries/</link>
    <description>Recent content in Libraries on nim4science</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="https://mantielero.github.io/nim4science/docs/libraries/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: Algebra</title>
      <link>https://mantielero.github.io/nim4science/docs/libraries/algebra/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mantielero.github.io/nim4science/docs/libraries/algebra/</guid>
      <description>
        
        
        &lt;h2 id=&#34;multidimensional-arrays-linear-algebra&#34;&gt;Multidimensional arrays, Linear-algebra&lt;/h2&gt;
&lt;p&gt;Multidimensional arrays are the basic block of scientific computing, it goes beyond the 2D or 3D vectors and matrices. Notable non-Nim implementations include Fortran, Julia, Matlab and Numpy.&lt;/p&gt;
&lt;p&gt;Status: in-progress&lt;/p&gt;
&lt;h3 id=&#34;arraymancer&#34;&gt;Arraymancer&lt;/h3&gt;
&lt;p&gt;Arraymancer supports dense multidimensional arrays of any type, on CPU (integers, floats, complex), Cuda and OpenCL (float only) and uses BLAS, CuBLAS and Clblast under the hood.&lt;/p&gt;
&lt;h3 id=&#34;arrayfire-nim&#34;&gt;ArrayFire-Nim&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/bitstormGER/ArrayFire-Nim&#34;&gt;ArrayFire-Nim&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;neo&#34;&gt;Neo&lt;/h3&gt;
&lt;p&gt;Neo supports dense and sparse float vectors and matrices, on CPU and Cuda (Nvidia GPUs) and also uses BLAS and LAPACK under the hood.&lt;/p&gt;
&lt;h3 id=&#34;nimtorch&#34;&gt;NimTorch&lt;/h3&gt;
&lt;p&gt;NimTorch supports most PyTorch features regarding multidimensional arrays, on CPU, Cuda, OpenCL and AMD ROCm provided you compiled PyTorch&amp;rsquo;s Aten backend with the relevant features.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Image</title>
      <link>https://mantielero.github.io/nim4science/docs/libraries/image/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mantielero.github.io/nim4science/docs/libraries/image/</guid>
      <description>
        
        
        &lt;h2 id=&#34;image-processing-library&#34;&gt;Image processing library&lt;/h2&gt;
&lt;p&gt;Computer vision is a thriving area of research. Vision scientists needs algorithms that works on images represented as a multidimensional arrays (different from say Photoshop), preferably multithreaded and GPU accelerated.&lt;/p&gt;
&lt;p&gt;Notable non-Nim libraries include OpenCV, Matlab, Python scikit-image, scipy.ndimage and mahotas.&lt;/p&gt;
&lt;p&gt;Status: in-progress&lt;/p&gt;
&lt;h3 id=&#34;nim-bindings-for-opencv-by-dom96&#34;&gt;Nim bindings for OpenCV by @dom96.&lt;/h3&gt;
&lt;p&gt;Unmaintained:&lt;/p&gt;
&lt;h3 id=&#34;arraymancer-vision-by-edubart&#34;&gt;Arraymancer-vision by @edubart&lt;/h3&gt;
&lt;p&gt;Nim-opencv provides rough low-level bindings of OpenCV functions.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Plotting</title>
      <link>https://mantielero.github.io/nim4science/docs/libraries/plotting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mantielero.github.io/nim4science/docs/libraries/plotting/</guid>
      <description>
        
        
        &lt;h2 id=&#34;plotting&#34;&gt;Plotting&lt;/h2&gt;
&lt;p&gt;Data analysis requires plotting, notable non-Nim implementations include Python matplotlib and seaborn, Plot.ly (Python, R, Javascript), R ggplot2, Matlab and Facebook Visdom (a simple interface to Plot.ly).&lt;/p&gt;
&lt;p&gt;Note that there are a couple of approach to plotting, either having a charting library or having a high-level grammar library (similar to SQL) that hides low-level details of a chart.&lt;/p&gt;
&lt;p&gt;Status: in-progress
Libraries:&lt;/p&gt;
&lt;p&gt;Unmaintained:&lt;/p&gt;
&lt;p&gt;arraymancer-vision has a very simple interface to Facebook&amp;rsquo;s Visdom here.&lt;/p&gt;
&lt;h3 id=&#34;ggplotnim&#34;&gt;ggplotnim&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/Vindaar/ggplotnim&#34;&gt;ggplotnim&lt;/a&gt; is an implementation in pure Nim of the graphics of grammar. There are some &lt;a href=&#34;https://github.com/Vindaar/ggplotnim/blob/master/recipes.org&#34;&gt;recipes&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;gnuplotnim&#34;&gt;gnuplot.nim&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/dvolk/gnuplot.nim&#34;&gt;gnuplot.nim&lt;/a&gt; is a wrapper of gnuplot.&lt;/p&gt;
&lt;h3 id=&#34;nim-plotly&#34;&gt;nim-plotly&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/brentp/nim-plotly&#34;&gt;nim-plotly&lt;/a&gt; uses the plot.ly charting library as a backend. Both MetaPlot and Monocle uses the Vega visualization grammar.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/sdwfrost/nim-plotly-example&#34;&gt;https://github.com/sdwfrost/nim-plotly-example&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;proof-of-concepts&#34;&gt;Proof-of-concepts&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/stisa/graph&#34;&gt;Graph&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;MetaPlot&lt;/li&gt;
&lt;li&gt;Monocle&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;potential-libraries&#34;&gt;Potential libraries&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://gr-framework.org/&#34;&gt;GR framework&lt;/a&gt;: GR is a universal framework for cross-platform visualization applications. It offers developers a compact, portable and consistent graphics library for their programs. Applications range from publication quality 2D graphs to the representation of complex 3D scenes.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://root.cern.ch/gallery&#34;&gt;ROOT&lt;/a&gt;: it is quite big. It is C++.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://jkriege2.github.io/JKQtPlotter/index.html:&#34;&gt;http://jkriege2.github.io/JKQtPlotter/index.html:&lt;/a&gt; for QT.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/arrayfire/forge&#34;&gt;forge&lt;/a&gt;: it seems like arrayfire is already &lt;a href=&#34;https://github.com/bitstormGER/ArrayFire-Nim&#34;&gt;wrapped&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://www.qcustomplot.com/&#34;&gt;QCustomPlot&lt;/a&gt;: c++ / qt&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Dataframe</title>
      <link>https://mantielero.github.io/nim4science/docs/libraries/dataframe/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mantielero.github.io/nim4science/docs/libraries/dataframe/</guid>
      <description>
        
        
        &lt;h2 id=&#34;dataframe-and-columnartabular-data-processing&#34;&gt;Dataframe and columnar/tabular data processing&lt;/h2&gt;
&lt;p&gt;Dataframes are essential to process structured data (say Name, Age, number of products bought, last time of visit). They allow very efficient data manipulation, including easily creating new columns, joining dataframes, converting between types.&lt;/p&gt;
&lt;p&gt;Notable non-Nim packages include Python Pandas and R datatable. When data does not fit in RAM, dataframe packages are interfaced with SQL or HDF5 datastores or even Spark for very large scale processing.&lt;/p&gt;
&lt;h3 id=&#34;nimdata&#34;&gt;NimData&lt;/h3&gt;
&lt;p&gt;NimData provides dataframe facilities to Nim&lt;/p&gt;
&lt;p&gt;Status: in-progress&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Serialization</title>
      <link>https://mantielero.github.io/nim4science/docs/libraries/serialization/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mantielero.github.io/nim4science/docs/libraries/serialization/</guid>
      <description>
        
        
        &lt;h2 id=&#34;scientific-serialization-format&#34;&gt;Scientific serialization format&lt;/h2&gt;
&lt;p&gt;There are many formats specific to science ot even science domains.&lt;/p&gt;
&lt;p&gt;Libraries:&lt;/p&gt;
&lt;p&gt;nim-hdf5, wrapper for the HDF5 data format&lt;/p&gt;
&lt;h3 id=&#34;nimhdf5&#34;&gt;nimhdf5&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/Vindaar/nimhdf5&#34;&gt;nimhdf5&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Geospatial</title>
      <link>https://mantielero.github.io/nim4science/docs/libraries/geospatial/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mantielero.github.io/nim4science/docs/libraries/geospatial/</guid>
      <description>
        
        
        &lt;h2 id=&#34;geospatial-library&#34;&gt;Geospatial library&lt;/h2&gt;
&lt;p&gt;Often scientist needs to deal with geospatial coordinate (latitude, longitude), maps and distances.&lt;/p&gt;
&lt;p&gt;This include efficient data-structures like KD-Tree or RTree to compute distances between points and distance formulas like Haversine to compute distance on a sphere.&lt;/p&gt;
&lt;p&gt;Notable non-Nim libraries include Python&amp;rsquo;s scipy.spatial, Geopy, Shapely&lt;/p&gt;
&lt;p&gt;Status: in-progress
R-tree forum thread.&lt;/p&gt;
&lt;p&gt;R-trees
Kd-trees: &lt;a href=&#34;https://github.com/jblindsay/kdtree&#34;&gt;https://github.com/jblindsay/kdtree&lt;/a&gt;
Proof-of-concepts:&lt;/p&gt;
&lt;p&gt;GDAL wrapper (Geospatial Data Abstraction Library)&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Random</title>
      <link>https://mantielero.github.io/nim4science/docs/libraries/random/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mantielero.github.io/nim4science/docs/libraries/random/</guid>
      <description>
        
        
        &lt;h2 id=&#34;random-library&#34;&gt;Random library&lt;/h2&gt;
&lt;p&gt;Lots of scientific algorithms rely on stochastic processes or random distribution.
At the very least pseudo-random generator that samples from a normal/gaussian distribution is needed.&lt;/p&gt;
&lt;p&gt;Notable non-Nim library include Scipy&lt;/p&gt;
&lt;p&gt;Status: in-progress
Libraries:&lt;/p&gt;
&lt;p&gt;Alea by @andreaferretti allows sampling from non-uniform distributions (Gaussian, Bernoulli, Poisson &amp;hellip;)
Standard library and Nim-random by @oprypin only allows uniform sampling.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Scientific language bindings</title>
      <link>https://mantielero.github.io/nim4science/docs/libraries/bindings/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mantielero.github.io/nim4science/docs/libraries/bindings/</guid>
      <description>
        
        
        &lt;h2 id=&#34;scientific-language-bindings&#34;&gt;Scientific language bindings&lt;/h2&gt;
&lt;h3 id=&#34;python&#34;&gt;Python&lt;/h3&gt;
&lt;p&gt;Nimpy
Unmaintained&lt;/p&gt;
&lt;p&gt;nim-pymod, this includes Numpy support and was used by the startup Object AI
python3, raw python3 wrapper&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;nim-pymod is not mantained and a little cumbersome in that it requires its own scripts to build, but it allows to send ndarrays back and forth&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;nimpy looks more actively mantained but I am not sure whether it supports Numpy types&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;python3 seems to be another one, but I am not sure of its status&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Deep Learning</title>
      <link>https://mantielero.github.io/nim4science/docs/libraries/deep_learning/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mantielero.github.io/nim4science/docs/libraries/deep_learning/</guid>
      <description>
        
        
        &lt;h2 id=&#34;deep-learning--neural-network&#34;&gt;Deep learning &amp;amp; neural network&lt;/h2&gt;
&lt;p&gt;Deep learning is machine learning with neural networks and arguably eating the world (or atleast Reddit, Hacker News and sponsors). In comparison to most traditional machine learning tools, neural networks can also learn very well from non-structured data (images, sounds, text &amp;hellip;).&lt;/p&gt;
&lt;p&gt;Notable non-Nim libraries include: Facebook Torch, Google Tensorflow, Apache and Amazon Mxnet&lt;/p&gt;
&lt;p&gt;Status: in-progress
Libraries:&lt;/p&gt;
&lt;p&gt;Arraymancer
NimTorch
Proof-of-concept:&lt;/p&gt;
&lt;p&gt;Neurotic was a proof of concept to build simple neural network on Neo/linalg&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Geometry</title>
      <link>https://mantielero.github.io/nim4science/docs/libraries/geometry/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mantielero.github.io/nim4science/docs/libraries/geometry/</guid>
      <description>
        
        
        &lt;h2 id=&#34;geometry&#34;&gt;Geometry&lt;/h2&gt;
&lt;p&gt;Computational geometry also require tuned algorithms for: geometry primitives, polygons and polyhedron, triangulations, distances, shape analysis &amp;hellip;&lt;/p&gt;
&lt;p&gt;Noteable non-Nim library: CGAL&lt;/p&gt;
&lt;p&gt;Status: no library&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Linear</title>
      <link>https://mantielero.github.io/nim4science/docs/libraries/linear/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mantielero.github.io/nim4science/docs/libraries/linear/</guid>
      <description>
        
        
        &lt;h2 id=&#34;linear-programming&#34;&gt;Linear programming&lt;/h2&gt;
&lt;p&gt;Status: in-progress
Libraries:&lt;/p&gt;
&lt;p&gt;nim-isl, wrapper for the ISL parametric integer linear programming library&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Machine Learning</title>
      <link>https://mantielero.github.io/nim4science/docs/libraries/machine_learning/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mantielero.github.io/nim4science/docs/libraries/machine_learning/</guid>
      <description>
        
        
        &lt;h2 id=&#34;machine-learning&#34;&gt;Machine learning&lt;/h2&gt;
&lt;p&gt;Machine learning is how to teach a computer to learn/generalize patterns from data.&lt;/p&gt;
&lt;p&gt;Notable non-Nim libraries include: Python&amp;rsquo;s Scikit-Learn and R&amp;rsquo;s Caret.
State-of-the-art C++ library to wrap: XGBoost&lt;/p&gt;
&lt;p&gt;Status: in-progress&lt;/p&gt;
&lt;p&gt;Arraymancer
libsvm (Support Vector Machines) wrapper
&lt;a href=&#34;https://github.com/fragcolor-xyz/nimtorch&#34;&gt;NimTorch&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Natural Language Processing</title>
      <link>https://mantielero.github.io/nim4science/docs/libraries/nlp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mantielero.github.io/nim4science/docs/libraries/nlp/</guid>
      <description>
        
        
        &lt;h2 id=&#34;natural-language-processing&#34;&gt;Natural Language Processing&lt;/h2&gt;
&lt;p&gt;Do we want a category for natural language processing? Examples of Python libraries are nltk, gensim, spacy, and scikit-learn.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/Nim-NLP&#34;&gt;https://github.com/Nim-NLP&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;other-text-tokenizers&#34;&gt;Other text tokenizers&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/microsoft/BlingFire&#34;&gt;https://github.com/microsoft/BlingFire&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/google/sentencepiece&#34;&gt;https://github.com/google/sentencepiece&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Non-Linear Solver</title>
      <link>https://mantielero.github.io/nim4science/docs/libraries/nonlinear/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mantielero.github.io/nim4science/docs/libraries/nonlinear/</guid>
      <description>
        
        
        &lt;h2 id=&#34;non-linear-optimization&#34;&gt;Non-linear optimization&lt;/h2&gt;
&lt;p&gt;Status: in-progress
Libraries:&lt;/p&gt;
&lt;p&gt;MPFIT (Non-Linear Least squares fitting)
&lt;a href=&#34;https://github.com/Vindaar/nimnlopt&#34;&gt;nimnlopt&lt;/a&gt;, wrapper for the nlopt library&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Non-linear least square fitting
&lt;a href=&#34;https://github.com/Vindaar/nim-mpfit&#34;&gt;https://github.com/Vindaar/nim-mpfit&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Other</title>
      <link>https://mantielero.github.io/nim4science/docs/libraries/other/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mantielero.github.io/nim4science/docs/libraries/other/</guid>
      <description>
        
        
        &lt;p&gt;Space here for other libraries&lt;/p&gt;
&lt;p&gt;Placeholder.&lt;/p&gt;
&lt;p&gt;To avoid polluting this meta-thread with specific discussion on certain topics (say what I want in the random library), this will link to the discussion topics:&lt;/p&gt;
&lt;p&gt;Multidimensional arrays, Linear-algebra
#14, #17, #25, #50, #59&lt;/p&gt;
&lt;p&gt;Plotting
#17, #51, #70&lt;/p&gt;
&lt;p&gt;Geospatial
#13, #69&lt;/p&gt;
&lt;p&gt;Image processing
#69&lt;/p&gt;
&lt;p&gt;Dataframes, columnar/tabular data processing
#20, #47, #33&lt;/p&gt;
&lt;p&gt;Random
#40&lt;/p&gt;
&lt;p&gt;Statistics
#16&lt;/p&gt;
&lt;p&gt;Machine learning
#48&lt;/p&gt;
&lt;p&gt;Deep learning
No issue open&lt;/p&gt;
&lt;p&gt;Computational Geometry
#53&lt;/p&gt;
&lt;p&gt;For some precision engineering/scientific applications, the ability to use arbitrary precision floating point arithmetic would be useful. Does an MPFR wrapper a la Julia&amp;rsquo;s built-in support for BigFloat belong on this list?&lt;/p&gt;
&lt;p&gt;it seems that there is still no computer algebra system module like &lt;a href=&#34;https://www.sympy.org/&#34;&gt;https://www.sympy.org/&lt;/a&gt;. I also made a post &lt;a href=&#34;https://forum.nim-lang.org/t/4165&#34;&gt;https://forum.nim-lang.org/t/4165&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;repl--jupyter-like&#34;&gt;REPL / JUPYTER-like&lt;/h2&gt;
&lt;p&gt;having a (nearly?) fully functional jupyter kernel would be quite useful for my work and, I suspect for many people.&lt;/p&gt;
&lt;p&gt;@brentp: There is (or was) jupyternim: &lt;a href=&#34;https://github.com/stisa/jupyternim&#34;&gt;https://github.com/stisa/jupyternim&lt;/a&gt;
I&amp;rsquo;m not sure if it&amp;rsquo;s abandoned and/or still compiles (last activity Oct 2018); I have never used it. Its downside is that it was written without hot code reloading in mind of course. However, I think it&amp;rsquo;d provide a nice basis for an updated implementation, which uses HCR for the relevant parts and the socket communication of jupyternim.&lt;/p&gt;
&lt;p&gt;I once started playing around with HCR, but wasn&amp;rsquo;t very successful even implementing a trivial repl, &lt;a href=&#34;https://github.com/vindaar/brokenrepl&#34;&gt;https://github.com/vindaar/brokenrepl&lt;/a&gt;. Posting it here if anyone wants to give it a try.&lt;/p&gt;
&lt;p&gt;yes, I saw that and inim from @stisa, now that there are ggplots and dataframes, the notebook would a be a boon.&lt;/p&gt;
&lt;p&gt;(my) jupyternim and inim are the same code, there was a naming conflict with &lt;a href=&#34;https://github.com/AndreiRegiani/INim&#34;&gt;https://github.com/AndreiRegiani/INim&lt;/a&gt; so I renamed it. I agree it&amp;rsquo;s due an update, but I have been pretty busy this year.
Last time I saw, HCR was limited to JS target, looking at &lt;a href=&#34;https://nim-lang.org/docs/hcr.html&#34;&gt;https://nim-lang.org/docs/hcr.html&lt;/a&gt; there was a lot of progress so I may have a look into adopting it when I get some free time, if nobody starts working on it first.&lt;/p&gt;
&lt;h2 id=&#34;more-stuff&#34;&gt;More stuff&lt;/h2&gt;
&lt;p&gt;@chemist69 Jupyternim predates hot-code reloading which was written also with jupyter kernel in mind and should be less hacky. No idea though on how to use it in practice.&lt;/p&gt;
&lt;p&gt;Docs if someone want to play with it: &lt;a href=&#34;https://nim-lang.org/docs/hcr.html&#34;&gt;https://nim-lang.org/docs/hcr.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;@miran In terms of plotting we have nim-plotly and ggplotnim which is written from scratch.&lt;/p&gt;
&lt;p&gt;On my side I&amp;rsquo;m still convinced that the Vega ecosystem is probably one of the best ways forward. Especially because they provide an open-source Tableau called Lyra (build with feedback from Tableau people) and most impressively a tool that does automatic suggestions of data visualizations called Voyager&lt;/p&gt;
&lt;p&gt;This is the video that sold me on Vega from the OpenVis 2015 conference. Focus on Voyager at 19:15 - &lt;a href=&#34;https://youtu.be/GdoDLuPe-Wg?t=1155&#34;&gt;https://youtu.be/GdoDLuPe-Wg?t=1155&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I have a PoC of calling Vega lite from Nim here: &lt;a href=&#34;https://github.com/numforge/monocle&#34;&gt;https://github.com/numforge/monocle&lt;/a&gt; but I have no time to work on it for the foreseeable future.&lt;/p&gt;
&lt;h2 id=&#34;some-inspiration&#34;&gt;Some inspiration&lt;/h2&gt;
&lt;h3 id=&#34;scipy-structure&#34;&gt;Scipy structure&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Basic functions&lt;/li&gt;
&lt;li&gt;Special functions (scipy.special)&lt;/li&gt;
&lt;li&gt;Integration (scipy.integrate)&lt;/li&gt;
&lt;li&gt;Optimization (scipy.optimize)&lt;/li&gt;
&lt;li&gt;Interpolation (scipy.interpolate)&lt;/li&gt;
&lt;li&gt;Fourier Transforms (scipy.fft)&lt;/li&gt;
&lt;li&gt;Signal Processing (scipy.signal)&lt;/li&gt;
&lt;li&gt;Linear Algebra (scipy.linalg)&lt;/li&gt;
&lt;li&gt;Sparse eigenvalue problems with ARPACK&lt;/li&gt;
&lt;li&gt;Compressed Sparse Graph Routines (scipy.sparse.csgraph)&lt;/li&gt;
&lt;li&gt;Spatial data structures and algorithms (scipy.spatial)&lt;/li&gt;
&lt;li&gt;Statistics (scipy.stats)&lt;/li&gt;
&lt;li&gt;Multidimensional image processing (scipy.ndimage)&lt;/li&gt;
&lt;li&gt;File IO (scipy.io)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;awesome-julia&#34;&gt;Awesome Julia&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Julia Lang-the language - The core language and other libraries in Julia.&lt;/li&gt;
&lt;li&gt;Julia Stats- Statistic and Machine learning enthusiasts.&lt;/li&gt;
&lt;li&gt;Julia Opt- Solutions and libraries for Mathematical Optimization.&lt;/li&gt;
&lt;li&gt;Julia Parallel-Various models of Parallel Programming in Julia.&lt;/li&gt;
&lt;li&gt;Julia Astro - Astronomy and Astrophysics packages for Julia.&lt;/li&gt;
&lt;li&gt;Julia Quant -Quantitative Finance Libraries in Julia.&lt;/li&gt;
&lt;li&gt;Julia Quantum - Julia Libraries for Quantum Science and Technology.&lt;/li&gt;
&lt;li&gt;Julia Sparse -Sparse Matrix and Graph Partioning libraries.&lt;/li&gt;
&lt;li&gt;Julia Diff - Differential Tools in Julia.&lt;/li&gt;
&lt;li&gt;Julia GPU - GPU computing for Julia&lt;/li&gt;
&lt;li&gt;Julia Web - Libraries for the web . Includes sockets, requests, curl, GeoIP and much more.&lt;/li&gt;
&lt;li&gt;Julia CI - Continous Integration support for Julia. Includes Travis Builds and Tests.&lt;/li&gt;
&lt;li&gt;BioJulia - -Bioinformatics Research.&lt;/li&gt;
&lt;li&gt;JuliaBox - Code Julia on the go using a browser.&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Physics</title>
      <link>https://mantielero.github.io/nim4science/docs/libraries/physics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mantielero.github.io/nim4science/docs/libraries/physics/</guid>
      <description>
        
        
        &lt;h2 id=&#34;computational-physics&#34;&gt;Computational Physics&lt;/h2&gt;
&lt;p&gt;Status: in-progress
Libraries:&lt;/p&gt;
&lt;p&gt;Numerical Nim, Differential Equation solver and numerical integration
Orbits. Orbital mechanics library for Nim (for planetoids).
QEX, QUantum Expression and Lattice Field Theory framework. Presentation slides at CERN and paper.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Simulation</title>
      <link>https://mantielero.github.io/nim4science/docs/libraries/simulation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mantielero.github.io/nim4science/docs/libraries/simulation/</guid>
      <description>
        
        
        &lt;h2 id=&#34;simulation&#34;&gt;Simulation&lt;/h2&gt;
&lt;p&gt;What about simulation? Something like simulink, &lt;a href=&#34;https://www.modelica.org/&#34;&gt;modelica&lt;/a&gt; or &lt;a href=&#34;https://github.com/ModiaSim/Modia.jl/blob/master/README.md&#34;&gt;Modia&lt;/a&gt; (in Julia).&lt;/p&gt;
&lt;p&gt;It would be nice something similar to Modia in particular, given Nim&amp;rsquo;s metaprogramming capabilities.&lt;/p&gt;
&lt;p&gt;One area where I believe nim could shine is in exporting FMU model (following the &lt;a href=&#34;https://fmi-standard.org/&#34;&gt;FMI standard&lt;/a&gt;). I don&amp;rsquo;t see python doing that. An even for Julia is a struggle because they need to export the runtime for compiled stuff which is big and not straightforward (&lt;a href=&#34;https://discourse.julialang.org/t/export-interface-julia-code-to-fmi-fmu-standard-fmu/21211/3&#34;&gt;here&lt;/a&gt; you can see how the libraries take above 100Mb for a simple example, when compiled ahead of time).&lt;/p&gt;
&lt;h2 id=&#34;relevant-links&#34;&gt;Relevant links&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/ghorwin/FMICodeGenerator/blob/master/readme.md&#34;&gt;FMI Code Generator&lt;/a&gt;
&lt;a href=&#34;https://www.qtronic.de/en/fmu-sdk/&#34;&gt;FMU SDK&lt;/a&gt;
&lt;a href=&#34;https://computation.llnl.gov/projects/sundials&#34;&gt;Sundials&lt;/a&gt;: SUite of Nonlinear and DIfferential/ALgebraic Equation Solvers in order to embed the solver in the FMU. Bindings for this would be useful even on itself.
&lt;a href=&#34;https://github.com/LBNL-ETA/SimulatorToFMU&#34;&gt;SimulatorToFMU&lt;/a&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Statistics</title>
      <link>https://mantielero.github.io/nim4science/docs/libraries/stats/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mantielero.github.io/nim4science/docs/libraries/stats/</guid>
      <description>
        
        
        &lt;h2 id=&#34;statistics&#34;&gt;Statistics&lt;/h2&gt;
&lt;p&gt;Notable language: R&lt;/p&gt;
&lt;p&gt;Status: standard lib statistics module&lt;/p&gt;
&lt;p&gt;Nim stats&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
